/*globals define, WebGMEGlobal*/

/**
 * Generated by VisualizerGenerator 1.7.0 from webgme on Thu Dec 08 2022 02:16:20 GMT-0600 (Central Standard Time).
 */

define(['jointjs', 'css!./styles/SimulatePetriNetWidget.css'], function (joint) {
    'use strict';

    var WIDGET_CLASS = 'simulate-petri-net';

    function SimulatePetriNetWidget(logger, container) {
        this._logger = logger.fork('Widget');

        this._el = container;

        this.nodes = {};
        this._initialize();

        this._logger.debug('ctor finished');
    }

    SimulatePetriNetWidget.prototype._initialize = function () {
        console.log(joint);
        var width = this._el.width(),
            height = this._el.height(),
            self = this;

        // set widget class
        this._el.addClass(WIDGET_CLASS);

        this._jointPN = new joint.dia.Graph;
        this._jointPaper = new joint.dia.Paper({
            el: this._el,
            width : width,
            height: height,
            model: this._jointPN,
            interactive: false
        });

        // add event calls to elements
        this._jointPaper.on('element:pointerdblclick', function(elementView) {
            const currentElement = elementView.model;
            // console.log(currentElement);
            if (self._webgmeSM) {
                // console.log(self._webgmeSM.id2state[currentElement.id]);
                self._setCurrentState(self._webgmeSM.id2state[currentElement.id]);
            }
        });

        this._webgmeSM = null;
    };

    SimulatePetriNetWidget.prototype.onWidgetContainerResize = function (width, height) {
        this._logger.debug('Widget is resizing...');
    };

    // Adding/Removing/Updating items
    SimulatePetriNetWidget.prototype.addNode = function (desc) {
        if (desc) {
            newNode = this.nodes[desc.id]
            position = newNode.getRegistry('position')
            vertex = new joint.shapes.standard.Circle({
                position: position,
                size: { width: 20, height: 20 },
                attrs: {
                    body: {
                        fill: '#333333',
                        cursor: 'pointer'
                    }
                }
            });
            vertex.addTo(self._jointPN);
            // Add node to a table of nodes
            // var node = document.createElement('div'),
            //     label = 'children';

            // if (desc.childrenIds.length === 1) {
            //     label = 'child';
            // }

            // this.nodes[desc.id] = desc;
            // node.innerHTML = 'Adding node "' + desc.name + '" (click to view). It has ' +
            //     desc.childrenIds.length + ' ' + label + '.';

            // this._el.append(node);
            // node.onclick = this.onNodeClick.bind(this, desc.id);
        }
    };

    SimulatePetriNetWidget.prototype.removeNode = function (gmeId) {
        var desc = this.nodes[gmeId];
        this._el.append('<div>Removing node "' + desc.name + '"</div>');
        delete this.nodes[gmeId];
    };

    SimulatePetriNetWidget.prototype.updateNode = function (desc) {
        if (desc) {
            this._logger.debug('Updating node:', desc);
            this._el.append('<div>Updating node "' + desc.name + '"</div>');
        }
    };

    /* * * * * * * * Visualizer event handlers * * * * * * * */

    SimulatePetriNetWidget.prototype.onNodeClick = function (/*id*/) {
        // This currently changes the active node to the given id and
        // this is overridden in the controller.
    };

    SimulatePetriNetWidget.prototype.onBackgroundDblClick = function () {
        this._el.append('<div>Background was double-clicked!!</div>');
    };

    /* * * * * * * * Visualizer life cycle callbacks * * * * * * * */
    SimulatePetriNetWidget.prototype.destroy = function () {
    };

    SimulatePetriNetWidget.prototype.onActivate = function () {
        this._logger.debug('SimulatePetriNetWidget has been activated');
    };

    SimulatePetriNetWidget.prototype.onDeactivate = function () {
        this._logger.debug('SimulatePetriNetWidget has been deactivated');
    };

    return SimulatePetriNetWidget;
});
